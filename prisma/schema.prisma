// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Criar -> npx prisma db push
// Gerar as tabelas -> npx prisma generate
// Visualizar banco de dados -> npx prisma studio

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Modelo para representar uma pessoa do time
model User {
  id       Int    @id @default(autoincrement())
  name     String
  office   String // front, back, fullstack, QA, Design
  projects Team[]

  @@map("users")
}

// Modelo para representar um projeto
model Project {
  id          Int       @id @default(autoincrement())
  initialDate DateTime
  endDate     DateTime?
  name        String
  description String
  users       Team[]
  status      String    @default("inProgress") // completed, inProgress, canceled  
  // sprints      Sprint[]

  @@map("projects")
}

// // Relacionamento entre Pessoa e Projeto
model Team {
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  project   Project @relation(fields: [projectId], references: [id])
  projectId Int
  role      String // PO, SM, DEV, QA

  @@id([userId, projectId])
  @@map("teams")
}

// // Modelo para representar uma sprint do projeto
// model Sprint {
//   id            Int       @id @default(autoincrement())
//   projeto       Projeto   @relation(fields: [projetoId], references: [id])
//   projetoId     Int
//   dataInicio    DateTime
//   dataFim       DateTime
//   tarefas       Tarefa[]
// }

// // Modelo para representar uma tarefa
// model Tarefa {
//   id              Int       @id @default(autoincrement())
//   nome            String
//   historia        Historia  @relation(fields: [historiaId], references: [id])
//   historiaId      Int
//   responsaveis    Pessoa[]  @relation("ResponsavelTarefa")
//   status          String    // Todo, Doing, Done, QA
// }

// // Modelo para representar uma hist√≥ria do projeto
// model Historia {
//   id          Int       @id @default(autoincrement())
//   descricao   String
// }
